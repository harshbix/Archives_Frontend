Instructions for editing src/components/upload/uploadPage.jsx in multiple precise steps:

1. Add axios import after existing imports.

Search:
import Navbar from '../navBar/Navbar';

Replace:
import Navbar from '../navBar/Navbar';
import axios from 'axios';

2. Add new state declarations after existing useState declarations.

Search:
const [alert, setAlert] = useState(null);

Replace:
const [alert, setAlert] = useState(null);

// State variables for form inputs
const [year, setYear] = useState('');
const [course, setCourse] = useState('');
const [subject, setSubject] = useState('');
const [level, setLevel] = useState('');
const [department, setDepartment] = useState('');
const [semester, setSemester] = useState('');

3. Update input elements to bind value and onChange handlers.

Search:
<label className="form-label">Year</label>
<input type="text" className="form-control" placeholder="Enter the Year" />

Replace:
<label className="form-label">Year</label>
<input
    type="text"
    className="form-control"
    placeholder="Enter the Year"
    value={year}
    onChange={(e) => setYear(e.target.value)}
/>

Search:
<label className="form-label">Course</label>
<input type="text" className="form-control" placeholder="Enter the Course" />

Replace:
<label className="form-label">Course</label>
<input
    type="text"
    className="form-control"
    placeholder="Enter the Course"
    value={course}
    onChange={(e) => setCourse(e.target.value)}
/>

Search:
<label className="form-label">Subject</label>
<input type="text" className="form-control" placeholder="Enter the Subject" />

Replace:
<label className="form-label">Subject</label>
<input
    type="text"
    className="form-control"
    placeholder="Enter the Subject"
    value={subject}
    onChange={(e) => setSubject(e.target.value)}
/>

Search:
<label className="form-label">Level</label>
<input type="text" className="form-control" placeholder="Enter level" />

Replace:
<label className="form-label">Level</label>
<input
    type="text"
    className="form-control"
    placeholder="Enter level"
    value={level}
    onChange={(e) => setLevel(e.target.value)}
/>

Search:
<label className="form-label">Department</label>
<input type="text" className="form-control" placeholder="Enter the department" />

Replace:
<label className="form-label">Department</label>
<input
    type="text"
    className="form-control"
    placeholder="Enter the department"
    value={department}
    onChange={(e) => setDepartment(e.target.value)}
/>

Search:
<label className="form-label">Semester</label>
<input type="text" className="form-control" placeholder="Enter Semester " />

Replace:
<label className="form-label">Semester</label>
<input
    type="text"
    className="form-control"
    placeholder="Enter Semester "
    value={semester}
    onChange={(e) => setSemester(e.target.value)}
/>

4. Modify handleUpload function to send FormData with file and details.

Search:
const handleUpload = (event) => {
    event.preventDefault();
    if (file) {
        console.log('File uploaded:', file.name);
        setAlert({ type: 'success', message: 'File uploaded successfully!' });
        setFile(null);
    } else {
        setAlert({ type: 'danger', message: 'No file selected!' });
    }
};

Replace:
const handleUpload = async (event) => {
    event.preventDefault();
    if (!file) {
        setAlert({ type: 'danger', message: 'No file selected!' });
        return;
    }

    const formData = new FormData();
    formData.append('document', file);
    formData.append('year', year);
    formData.append('course', course);
    formData.append('subject', subject);
    formData.append('level', level);
    formData.append('department', department);
    formData.append('semester', semester);

    try {
        const response = await axios.post('http://127.0.0.1:8002/api/documents/', formData, {
            headers: {
                'Content-Type': 'multipart/form-data',
            },
        });
        setAlert({ type: 'success', message: 'File uploaded successfully!' });
        setFile(null);
        setYear('');
        setCourse('');
        setSubject('');
        setLevel('');
        setDepartment('');
        setSemester('');
    } catch (error) {
        setAlert({ type: 'danger', message: 'Upload failed. Please try again.' });
        console.error('Upload error:', error);
    }
};

5. Modify handleCancel to clear new states.

Search:
const handleCancel = () => {
    setFile(null);
    setAlert(null);
};

Replace:
const handleCancel = () => {
    setFile(null);
    setAlert(null);
    setYear('');
    setCourse('');
    setSubject('');
    setLevel('');
    setDepartment('');
    setSemester('');
};
